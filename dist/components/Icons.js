/**
 * This file is autogenerated by the `build-native-ts-icon-file.js` script.
 * Please edit that file to make adjustments.
 */
import React from "react";
import IconBack from "./icons/Back";
import IconCard from "./icons/Card";
import IconClose from "./icons/Close";
import IconDownload from "./icons/Download";
import IconForward from "./icons/Forward";
import IconKey from "./icons/Key";
import IconLock from "./icons/Lock";
import IconMapbox from "./icons/Mapbox";
import IconMeasure from "./icons/Measure";
import IconProfile from "./icons/Profile";
import IconRefer from "./icons/Refer";
import IconVideo from "./icons/Video";
function iconSelector(selectorString, props) {
    switch (selectorString) {
        case "icons/back":
            return <IconBack {...props}/>;
        case "icons/card":
            return <IconCard {...props}/>;
        case "icons/close":
            return <IconClose {...props}/>;
        case "icons/download":
            return <IconDownload {...props}/>;
        case "icons/forward":
            return <IconForward {...props}/>;
        case "icons/key":
            return <IconKey {...props}/>;
        case "icons/lock":
            return <IconLock {...props}/>;
        case "icons/mapbox":
            return <IconMapbox {...props}/>;
        case "icons/measure":
            return <IconMeasure {...props}/>;
        case "icons/profile":
            return <IconProfile {...props}/>;
        case "icons/refer":
            return <IconRefer {...props}/>;
        case "icons/video":
            return <IconVideo {...props}/>;
        default:
            throw new Error(`Invalid icon selection value: ${JSON.stringify(selectorString)}`);
    }
}
const Icon = ({ selectorString, ...props }) => (<>{iconSelector(selectorString, props)}</>);
export { Icon };
//# sourceMappingURL=Icons.js.map